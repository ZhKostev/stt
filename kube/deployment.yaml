apiVersion: apps/v1
kind: Deployment
metadata:
  name: rails-web-deployment
spec:
  selector:
    matchLabels:
      app: stt-app
  template:
    metadata:
      labels:
        app: stt-app
    spec:
      serviceAccountName: ksa-cloud-sql
      containers:
        - name: stt-app
          image: us.gcr.io/sql-connect-test-app/app:v12
          ports:
            - containerPort: 3000
          readinessProbe:
            httpGet:
              path: /_heath
              port: 3000
              scheme: HTTP
          env:
            - name: PSQL_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: rails-web-credentials
                  key: db_name
            - name: PSQL_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rails-web-credentials
                  key: db_user
            - name: PSQL_DB_PWD
              valueFrom:
                secretKeyRef:
                  name: rails-web-credentials
                  key: db_password
            - name: PSQL_HOST
              valueFrom:
                secretKeyRef:
                  name: rails-web-credentials
                  key: db_host
        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:latest
          command:
            - "/cloud_sql_proxy"

            # If connecting from a VPC-native GKE cluster, you can use the
            # following flag to have the proxy connect over private IP
            - "-ip_address_types=PRIVATE"

            # tcp should be set to the port the proxy should listen on
            # and should match the DB_PORT value set above.
            # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
            - "-instances=sql-connect-test-app:europe-west3:stt-app-pg=tcp:5432"
          securityContext:
            # The default Cloud SQL proxy image runs as the
            # "nonroot" user and group (uid: 65532) by default.
            runAsNonRoot: true
